name: E2E Tests

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps chromium

      - name: Create .env file for testing
        run: |
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" > .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "ROOT_PASSWORD=${{ secrets.ROOT_PASSWORD }}" >> .env
          # Utiliser localhost pour accéder à la base de données depuis l'extérieur
          echo "DATABASE_URL=mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:3306/${{ secrets.DB_NAME }}" >> .env

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Modify docker-compose to expose ports
        run: |
          # Exposer le port de la base de données
          sed -i 's/- "3306:3306"/- "3306:3306"/g' docker-compose.yml || true
          # S'assurer que le port 3000 est exposé
          cat docker-compose.yml

      - name: Build and start Docker containers
        run: docker compose up -d --build

      - name: Update playwright.config.ts for local testing
        run: |
          cat > playwright.config.ts << 'EOL'
          import { PlaywrightTestConfig } from '@playwright/test';

          const config: PlaywrightTestConfig = {
            testDir: './tests/e2e',
            timeout: 30000,
            use: {
              baseURL: 'http://localhost:3000',
              trace: 'on-first-retry',
              screenshot: 'only-on-failure',
            },
            projects: [
              {
                name: 'chromium',
                use: { browserName: 'chromium' },
              },
            ],
          };

          export default config;
          EOL

      - name: Run E2E tests locally
        run: npx playwright test --project=chromium
        
      - name: Show logs in case of failure
        if: failure()
        run: docker compose logs

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Cleanup
        if: always()
        run: docker compose down