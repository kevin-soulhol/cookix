# Dockerfile.prod

# ==============================================================================
# ÉTAPE 1: Base - Image Debian-based pour la compatibilité Playwright
# ==============================================================================
FROM node:22-bookworm-slim AS base

# Mettre à jour les paquets système pour les derniers patchs de sécurité
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y openssl && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Définir le chemin d'installation des navigateurs Playwright
ENV PLAYWRIGHT_BROWSERS_PATH=/app/pw-browsers


# ==============================================================================
# ÉTAPE 2: Dépendances - Installation de TOUTES les dépendances (dev incluses)
# Cette étape est nécessaire pour le build et l'installation de Playwright.
# ==============================================================================
FROM base AS deps

COPY package.json package-lock.json* ./

# Installer toutes les dépendances NPM
RUN npm ci

# Installer les dépendances système de Chromium ET le navigateur lui-même
RUN npx playwright install --with-deps chromium


# ==============================================================================
# ÉTAPE 3: Builder - Construction de l'application Remix
# ==============================================================================
FROM deps AS builder

# Copier le reste du code source
COPY . .

# Générer le client Prisma
RUN npx prisma generate

# Construire l'application pour la production
RUN NODE_ENV=production npm run build


# ==============================================================================
# ÉTAPE 4: Runner - L'image finale, optimisée et légère
# ==============================================================================
FROM deps AS runner

WORKDIR /app
ENV NODE_ENV=production

# Copier les fichiers de dépendances pour installer UNIQUEMENT les dépendances de production
COPY package.json package-lock.json* ./

# Installer uniquement les dépendances de production.
# Cela crée un dossier node_modules beaucoup plus petit.
RUN npm ci --omit=dev

# Installer les dépendances système de Playwright
COPY --from=builder /app/node_modules/playwright/package.json ./node_modules/playwright/package.json
COPY --from=builder /app/node_modules/playwright-core/package.json ./node_modules/playwright-core/package.json
# On utilise la commande 'install-deps' pour n'installer QUE les librairies système.
RUN npx playwright install-deps chromium

# Copier le client Prisma généré
COPY --from=builder /app/node_modules/.prisma/client ./node_modules/.prisma/client

# Copier les artefacts de build de l'étape "builder"
COPY --from=builder /app/build ./build
COPY --from=builder /app/public ./public

# Copier le client Prisma généré
COPY --from=builder /app/prisma ./prisma

COPY ./server.js ./server.js

# Copier et rendre exécutable le script de démarrage de production
COPY --from=builder /app/start-prod.sh ./
RUN chmod +x ./start-prod.sh

# Exposer le port
EXPOSE 3000

# Commande de démarrage pour la production
ENTRYPOINT ["./start-prod.sh"]