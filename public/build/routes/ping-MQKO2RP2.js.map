{
  "version": 3,
  "sources": ["../../../app/routes/ping.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/ping.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/ping.tsx\");\n  import.meta.hot.lastModified = \"1742403343749.7026\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\n\n// G\u00E8re les requ\u00EAtes GET\nexport function loader() {\n  return json({\n    status: \"ok\",\n    timestamp: new Date().toISOString()\n  });\n}\n\n// G\u00E8re les requ\u00EAtes POST\nexport function action() {\n  return json({\n    status: \"ok\",\n    timestamp: new Date().toISOString(),\n    method: \"POST\"\n  });\n}\n\n// Pas de composant de rendu n\u00E9cessaire pour une route API\nexport default function Ping() {\n  return null;\n}\n_c = Ping;\nvar _c;\n$RefreshReg$(_c, \"Ping\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;AAoBA,kBAAqB;AAnBrB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0BAA4B,EAAE;AAAA,EACvE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqB;AACrB,cAAY,IAAI,eAAe;AACjC;AAuBe,SAAR,OAAwB;AAC7B,SAAO;AACT;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
