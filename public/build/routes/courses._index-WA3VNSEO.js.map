{
  "version": 3,
  "sources": ["../../../app/routes/courses._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/courses._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/courses._index.tsx\");\n  import.meta.hot.lastModified = \"1742916317417.726\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData, useFetcher } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { prisma } from \"~/utils/db.server\";\nimport Layout from \"~/components/Layout\";\nimport { getUserId } from \"./api.user\";\n\n// Action pour g\u00E9rer les mises \u00E0 jour de la liste de courses\nexport async function action({\n  request\n}) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    return json({\n      success: false,\n      message: \"Il faut \u00EAtre connect\u00E9\"\n    }, {\n      status: 400\n    });\n  }\n  const formData = await request.formData();\n  const actionType = formData.get(\"_action\");\n  try {\n    // Action pour cocher/d\u00E9cocher un \u00E9l\u00E9ment\n    if (actionType === \"toggleItem\") {\n      const itemId = formData.get(\"itemId\");\n      const isChecked = formData.get(\"isChecked\") === \"true\";\n      if (!itemId) {\n        return json({\n          success: false,\n          message: \"ID de l'\u00E9l\u00E9ment requis\"\n        }, {\n          status: 400\n        });\n      }\n\n      // Mettre \u00E0 jour l'\u00E9tat de l'\u00E9l\u00E9ment\n      await prisma.shoppingItem.update({\n        where: {\n          id: parseInt(itemId.toString())\n        },\n        data: {\n          isChecked: !isChecked\n        }\n      });\n      return json({\n        success: true,\n        message: \"\u00C9tat de l'\u00E9l\u00E9ment mis \u00E0 jour\"\n      });\n    }\n\n    // Action pour supprimer un \u00E9l\u00E9ment\n    if (actionType === \"removeItem\") {\n      const itemId = formData.get(\"itemId\");\n      if (!itemId) {\n        return json({\n          success: false,\n          message: \"ID de l'\u00E9l\u00E9ment requis\"\n        }, {\n          status: 400\n        });\n      }\n\n      // Supprimer l'\u00E9l\u00E9ment\n      await prisma.shoppingItem.delete({\n        where: {\n          id: parseInt(itemId.toString())\n        }\n      });\n      return json({\n        success: true,\n        message: \"\u00C9l\u00E9ment supprim\u00E9 de la liste\"\n      });\n    }\n\n    // Action pour ajouter un \u00E9l\u00E9ment manuellement\n    if (actionType === \"addItem\") {\n      const name = formData.get(\"name\");\n      const quantity = formData.get(\"quantity\");\n      const unit = formData.get(\"unit\");\n      const listId = formData.get(\"listId\");\n      if (!name || !listId) {\n        return json({\n          success: false,\n          message: \"Nom de l'\u00E9l\u00E9ment et ID de la liste requis\"\n        }, {\n          status: 400\n        });\n      }\n\n      // V\u00E9rifier si l'ingr\u00E9dient existe d\u00E9j\u00E0\n      let ingredient = await prisma.ingredient.findFirst({\n        where: {\n          name: name.toString()\n        }\n      });\n\n      // Cr\u00E9er l'ingr\u00E9dient s'il n'existe pas\n      if (!ingredient) {\n        ingredient = await prisma.ingredient.create({\n          data: {\n            name: name.toString()\n          }\n        });\n      }\n\n      // Ajouter l'\u00E9l\u00E9ment \u00E0 la liste de courses\n      await prisma.shoppingItem.create({\n        data: {\n          shoppingListId: parseInt(listId.toString()),\n          ingredientId: ingredient.id,\n          quantity: quantity ? parseFloat(quantity.toString()) : null,\n          unit: unit ? unit.toString() : null,\n          marketplace: formData.get(\"marketplace\") === \"true\",\n          isChecked: false\n        }\n      });\n      return json({\n        success: true,\n        message: \"\u00C9l\u00E9ment ajout\u00E9 \u00E0 la liste\"\n      });\n    }\n\n    // Action pour vider les articles coch\u00E9s\n    if (actionType === \"clearChecked\") {\n      const listId = formData.get(\"listId\");\n      if (!listId) {\n        return json({\n          success: false,\n          message: \"ID de la liste requis\"\n        }, {\n          status: 400\n        });\n      }\n\n      // Supprimer tous les \u00E9l\u00E9ments coch\u00E9s\n      await prisma.shoppingItem.deleteMany({\n        where: {\n          shoppingListId: parseInt(listId.toString()),\n          isChecked: true\n        }\n      });\n      return json({\n        success: true,\n        message: \"\u00C9l\u00E9ments coch\u00E9s supprim\u00E9s\"\n      });\n    }\n\n    // Action pour passer l'article comme achetable au march\u00E9\n    if (actionType === \"toggleMarketplace\") {\n      const itemId = formData.get(\"itemId\");\n      const currentMarketplace = formData.get(\"marketplace\") === \"true\";\n      if (!itemId) {\n        return json({\n          success: false,\n          message: \"ID de l'\u00E9l\u00E9ment requis\"\n        }, {\n          status: 400\n        });\n      }\n\n      // Mettre \u00E0 jour le marketplace de l'\u00E9l\u00E9ment\n      await prisma.shoppingItem.update({\n        where: {\n          id: parseInt(itemId.toString())\n        },\n        data: {\n          marketplace: !currentMarketplace\n        }\n      });\n      return json({\n        success: true,\n        message: \"Magasin de l'\u00E9l\u00E9ment mis \u00E0 jour\"\n      });\n    }\n    return json({\n      success: false,\n      message: \"Action non reconnue\"\n    }, {\n      status: 400\n    });\n  } catch (error) {\n    console.error(\"Erreur lors de l'action sur la liste de courses:\", error);\n    return json({\n      success: false,\n      message: \"Une erreur est survenue\"\n    }, {\n      status: 500\n    });\n  }\n}\n\n// Loader pour r\u00E9cup\u00E9rer les donn\u00E9es de la liste de courses\nexport async function loader({\n  request\n}) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    return json({\n      success: false,\n      message: \"Il faut \u00EAtre connect\u00E9\"\n    }, {\n      status: 400\n    });\n  }\n  const url = new URL(request.url);\n  const listId = url.searchParams.get(\"listId\");\n  try {\n    // R\u00E9cup\u00E9rer la liste active ou celle sp\u00E9cifi\u00E9e par l'ID\n    let shoppingList;\n    if (listId) {\n      shoppingList = await prisma.shoppingList.findUnique({\n        where: {\n          id: parseInt(listId)\n        }\n      });\n\n      // V\u00E9rifier si l'utilisateur est propri\u00E9taire du menu ou s'il a un partage accept\u00E9\n      const hasAccess = shoppingList.userId === userId || (await prisma.menuShare.findFirst({\n        where: {\n          shoppingListId: parseInt(listId),\n          OR: [{\n            sharedWithUserId: userId\n          }, {\n            sharedWithEmail: {\n              equals: (await prisma.user.findUnique({\n                where: {\n                  id: userId\n                }\n              }))?.email\n            }\n          }],\n          isAccepted: true\n        }\n      }));\n      if (!hasAccess) {\n        return json({\n          success: false,\n          message: \"Vous n'avez pas acc\u00E8s \u00E0 cette liste\"\n        }, {\n          status: 403\n        });\n      }\n    } else {\n      shoppingList = await prisma.shoppingList.findFirst({\n        where: {\n          userId\n        }\n      });\n    }\n\n    // Si aucune liste n'existe, en cr\u00E9er une nouvelle\n    if (!shoppingList) {\n      shoppingList = await prisma.shoppingList.create({\n        data: {\n          userId\n        }\n      });\n    }\n\n    // R\u00E9cup\u00E9rer les \u00E9l\u00E9ments de la liste\n    const items = await prisma.shoppingItem.findMany({\n      where: {\n        shoppingListId: shoppingList.id\n      },\n      include: {\n        ingredient: {\n          select: {\n            name: true\n          }\n        }\n      },\n      orderBy: [{\n        isChecked: 'asc'\n      }, {\n        marketplace: 'asc'\n      }, {\n        ingredient: {\n          name: 'asc'\n        }\n      }]\n    });\n    const checkedItems = items.filter(item => item.isChecked);\n    const firstMarketplaceItems = items.filter(item => !item.isChecked && !item.marketplace);\n    const secondMarketplaceItems = items.filter(item => !item.isChecked && item.marketplace);\n    return json({\n      shoppingList,\n      items,\n      categorizedItems: {\n        checked: checkedItems,\n        firstMarketplace: firstMarketplaceItems,\n        secondMarketplace: secondMarketplaceItems\n      },\n      error: null\n    });\n  } catch (error) {\n    console.error(\"Erreur lors du chargement de la liste de courses:\", error);\n    return json({\n      shoppingList: null,\n      items: [],\n      error: \"Une erreur est survenue lors du chargement de la liste de courses\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport default function ShoppingList() {\n  _s();\n  const {\n    shoppingList,\n    items,\n    categorizedItems,\n    error\n  } = useLoaderData();\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newItemName, setNewItemName] = useState(\"\");\n  const [newItemQuantity, setNewItemQuantity] = useState(\"\");\n  const [newItemUnit, setNewItemUnit] = useState(\"\");\n  const [itemInFocus, setItemInFocus] = useState(null);\n  const [showShareModal, setShowShareModal] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const shareFetcher = useFetcher();\n  const toggleItemFetcher = useFetcher();\n  const removeItemFetcher = useFetcher();\n  const toggleMarketplaceFetcher = useFetcher();\n  const addItemFetcher = useFetcher();\n  const clearCheckedFetcher = useFetcher();\n  const firstMarketplaceCount = categorizedItems.firstMarketplace?.length || 0;\n  const secondMarketplaceCount = categorizedItems.secondMarketplace?.length || 0;\n  const checkedCount = categorizedItems.checked?.length || 0;\n  const totalCount = firstMarketplaceCount + secondMarketplaceCount + checkedCount;\n\n  // Calculer la progression\n  const progress = totalCount > 0 ? Math.round(checkedCount / totalCount * 100) : 0;\n\n  // G\u00E9rer la soumission du formulaire d'ajout\n  const handleAddItem = e => {\n    e.preventDefault();\n    if (!newItemName.trim()) return;\n    addItemFetcher.submit({\n      _action: \"addItem\",\n      name: newItemName,\n      quantity: newItemQuantity,\n      unit: newItemUnit,\n      listId: shoppingList.id\n    }, {\n      method: \"post\"\n    });\n\n    // R\u00E9initialiser le formulaire\n    setNewItemName(\"\");\n    setNewItemQuantity(\"\");\n    setNewItemUnit(\"\");\n    setShowAddForm(false);\n  };\n  return <Layout pageTitle=\"Liste de courses\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n                {error ? <div className=\"bg-red-50 border-l-4 border-red-500 p-4 text-red-700 mb-8\">\n                        {error}\n                    </div> : <>\n                        {/* En-t\u00EAte de la liste */}\n                        <div className=\"flex justify-between items-center mb-6\">\n                            <h1 className=\"text-2xl font-bold\">Liste de courses</h1>\n\n                            {checkedCount > 0 && <button onClick={() => {\n            if (window.confirm(\"Voulez-vous supprimer tous les articles coch\u00E9s ?\")) {\n              clearCheckedFetcher.submit({\n                _action: \"clearChecked\",\n                listId: shoppingList.id\n              }, {\n                method: \"post\"\n              });\n            }\n          }} className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                                    <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                    </svg>\n                                    Vider les coch\u00E9s\n                                </button>}\n\n                            <button onClick={() => setShowShareModal(true)} className=\"inline-flex items-center px-3 py-2 border border-gray-300 text-sm rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                                <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\" />\n                                </svg>\n                                Partager\n                            </button>\n                        </div>\n\n                        {/* Barre de progression */}\n                        {items.length > 0 && <div className=\"mb-8\">\n                                <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                                    <div>{checkedCount} sur {items.length} articles</div>\n                                    <div>{progress}% compl\u00E9t\u00E9</div>\n                                </div>\n                                <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                                    <div className=\"bg-teal-500 h-2.5 rounded-full\" style={{\n              width: `${progress}%`\n            }}></div>\n                                </div>\n                            </div>}\n\n                        {/* Liste des courses */}\n                        <div className=\"mb-8\">\n                            <h2 className=\"text-lg font-semibold mb-3 flex items-center\">\n                                <span className=\"text-gray-600\">{firstMarketplaceCount} articles</span>\n                            </h2>\n\n                            {firstMarketplaceCount === 0 ? <div className=\"bg-white rounded-lg shadow-md p-4 text-center text-gray-500\">\n                                    Aucun article pour le supermarch\u00E9\n                                </div> : <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                                    <ul className=\"divide-y divide-gray-200\">\n                                        {categorizedItems.firstMarketplace.map(item => <ShoppingItemWithMarketplace key={item.id} item={item} onToggle={() => {\n                toggleItemFetcher.submit({\n                  _action: \"toggleItem\",\n                  itemId: item.id,\n                  isChecked: item.isChecked.toString()\n                }, {\n                  method: \"post\"\n                });\n              }} onRemove={() => {\n                removeItemFetcher.submit({\n                  _action: \"removeItem\",\n                  itemId: item.id\n                }, {\n                  method: \"post\"\n                });\n              }} onToggleMarketplace={() => {\n                toggleMarketplaceFetcher.submit({\n                  _action: \"toggleMarketplace\",\n                  itemId: item.id,\n                  marketplace: item.marketplace.toString()\n                }, {\n                  method: \"post\"\n                });\n              }} />)}\n                                        {categorizedItems.secondMarketplace.map(item => <ShoppingItemWithMarketplace key={item.id} item={item} onToggle={() => {\n                toggleItemFetcher.submit({\n                  _action: \"toggleItem\",\n                  itemId: item.id,\n                  isChecked: item.isChecked.toString()\n                }, {\n                  method: \"post\"\n                });\n              }} onRemove={() => {\n                removeItemFetcher.submit({\n                  _action: \"removeItem\",\n                  itemId: item.id\n                }, {\n                  method: \"post\"\n                });\n              }} onToggleMarketplace={() => {\n                toggleMarketplaceFetcher.submit({\n                  _action: \"toggleMarketplace\",\n                  itemId: item.id,\n                  marketplace: item.marketplace.toString()\n                }, {\n                  method: \"post\"\n                });\n              }} />)}\n                                    </ul>\n                                </div>}\n                        </div>\n\n                        {/* Liste des courses - Articles coch\u00E9s */}\n                        {categorizedItems.checked.length > 0 && <div className=\"mb-8\">\n                                <h2 className=\"text-lg font-semibold mb-3 text-gray-600\">Articles coch\u00E9s</h2>\n                                <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n                                    <ul className=\"divide-y divide-gray-200\">\n                                        {categorizedItems.checked.map(item => <ShoppingItem key={item.id} item={item} onToggle={() => {\n                toggleItemFetcher.submit({\n                  _action: \"toggleItem\",\n                  itemId: item.id,\n                  isChecked: item.isChecked.toString()\n                }, {\n                  method: \"post\"\n                });\n              }} onRemove={() => {\n                removeItemFetcher.submit({\n                  _action: \"removeItem\",\n                  itemId: item.id\n                }, {\n                  method: \"post\"\n                });\n              }} />)}\n                                    </ul>\n                                </div>\n                            </div>}\n\n                        {/* Bouton d'ajout d'article */}\n                        {!showAddForm && <div className=\"text-center\">\n                                <button onClick={() => setShowAddForm(true)} className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500\">\n                                    <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                                    </svg>\n                                    Ajouter un article\n                                </button>\n                            </div>}\n\n                        {/* Formulaire d'ajout d'article */}\n                        {showAddForm && <div className=\"bg-white rounded-lg shadow-md p-4 mt-6\">\n                                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Ajouter un article</h3>\n                                <form onSubmit={handleAddItem}>\n                                    <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\n                                        <div className=\"sm:col-span-3\">\n                                            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n                                                Nom de l'article *\n                                            </label>\n                                            <div className=\"mt-1\">\n                                                <input type=\"text\" id=\"name\" name=\"name\" required value={newItemName} onChange={e => setNewItemName(e.target.value)} className=\"shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Ex: Tomates\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"sm:col-span-2\">\n                                            <label htmlFor=\"quantity\" className=\"block text-sm font-medium text-gray-700\">\n                                                Quantit\u00E9\n                                            </label>\n                                            <div className=\"mt-1\">\n                                                <input type=\"number\" id=\"quantity\" name=\"quantity\" step=\"0.01\" min=\"0\" value={newItemQuantity} onChange={e => setNewItemQuantity(e.target.value)} className=\"shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Ex: 500\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"sm:col-span-1\">\n                                            <label htmlFor=\"unit\" className=\"block text-sm font-medium text-gray-700\">\n                                                Unit\u00E9\n                                            </label>\n                                            <div className=\"mt-1\">\n                                                <input type=\"text\" id=\"unit\" name=\"unit\" value={newItemUnit} onChange={e => setNewItemUnit(e.target.value)} className=\"shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Ex: g\" />\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"mt-5 flex justify-end space-x-3\">\n                                        <button type=\"button\" onClick={() => setShowAddForm(false)} className=\"px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500\">\n                                            Annuler\n                                        </button>\n                                        <button type=\"submit\" className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500\">\n                                            Ajouter\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>}\n\n                        {/* Lien vers le menu */}\n                        <div className=\"text-center mt-8\">\n                            <Link to=\"/menu\" className=\"inline-flex items-center text-teal-600 hover:text-teal-800\">\n                                <svg className=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                                </svg>\n                                Retour au menu\n                            </Link>\n                        </div>\n\n                        {/* Modal de partage */}\n                        {showShareModal && <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n                                <div className=\"bg-white rounded-lg shadow-xl p-6 w-full max-w-md\">\n                                    <h2 className=\"text-lg font-bold mb-4\">Partager votre liste de courses</h2>\n\n                                    <shareFetcher.Form method=\"post\" action=\"/api/share\" onSubmit={() => setShowShareModal(false)}>\n                                        <input type=\"hidden\" name=\"_action\" value=\"shareMenu\" />\n                                        <input type=\"hidden\" name=\"shoppingListId\" value={shoppingList.id} />\n                                        {/* Laissez menuId vide - dans l'API nous allons g\u00E9rer ce cas sp\u00E9cial */}\n\n                                        <div className=\"mb-4\">\n                                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                                Adresse email\n                                            </label>\n                                            <input type=\"email\" id=\"email\" name=\"email\" required value={email} onChange={e => setEmail(e.target.value)} className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-rose-500 focus:border-rose-500\" placeholder=\"exemple@email.com\" />\n                                        </div>\n\n                                        <div className=\"flex justify-end space-x-3\">\n                                            <button type=\"button\" onClick={() => setShowShareModal(false)} className=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n                                                Annuler\n                                            </button>\n                                            <button type=\"submit\" className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\">\n                                                Partager\n                                            </button>\n                                        </div>\n                                    </shareFetcher.Form>\n                                </div>\n                            </div>}\n                    </>}\n            </div>\n        </Layout>;\n}\n\n// Composant pour les articles non coch\u00E9s (avec switch de marketplace)\n_s(ShoppingList, \"SsccXVQwbR/ZqXgIBUwqx3K5wHQ=\", false, function () {\n  return [useLoaderData, useFetcher, useFetcher, useFetcher, useFetcher, useFetcher, useFetcher];\n});\n_c = ShoppingList;\nfunction ShoppingItemWithMarketplace({\n  item,\n  onToggle,\n  onRemove,\n  onToggleMarketplace\n}) {\n  _s2();\n  const [itemInFocus, setItemInFocus] = useState(false);\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events\n    <li className={`px-4 py-3 flex items-center hover:bg-gray-50 relative ${item.marketplace ? 'before:absolute before:left-0 before:top-0 before:bottom-0 before:w-1 before:bg-green-500' : ''}`} onMouseEnter={() => setItemInFocus(true)} onMouseLeave={() => setItemInFocus(false)} onClick={onToggleMarketplace}>\n            <button type=\"button\" onClick={onToggle} className=\"w-5 h-5 rounded-full border mr-3 flex items-center justify-center border-gray-300\" aria-label=\"Cocher\">\n                {item.isChecked && <svg className=\"w-3 h-3 text-teal-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" d=\"M5 13l4 4L19 7\" />\n                    </svg>}\n            </button>\n\n            <div className=\"flex-grow\">\n                <span className=\"font-medium text-gray-700\">\n                    {item.ingredient.name}\n                </span>\n                {(item.quantity || item.unit) && <span className=\"ml-2 text-sm text-gray-500\">\n                        {item.quantity && <span>{item.quantity}</span>}\n                        {item.unit && <span> {item.unit}</span>}\n                    </span>}\n            </div>\n\n            <div className=\"flex items-center\">\n                {/* Switch pour changer de magasin - toujours visible */}\n                <button type=\"button\" onClick={onToggleMarketplace} className={`relative inline-flex h-6 w-11 items-center rounded-full mr-2 ${item.marketplace ? 'bg-green-500 hover:bg-green-600' : 'bg-gray-300 hover:bg-gray-400'}`}>\n                    <span className={`inline-block h-4 w-4 transform rounded-full bg-white transition ${item.marketplace ? 'translate-x-6' : 'translate-x-1'}`} />\n                </button>\n\n                {/* Bouton de suppression - appara\u00EEt uniquement au focus */}\n                {itemInFocus && <button type=\"button\" onClick={onRemove} className=\"text-gray-400 hover:text-red-500\" aria-label=\"Supprimer\">\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                    </button>}\n            </div>\n        </li>\n  );\n}\n_s2(ShoppingItemWithMarketplace, \"Uj+BHE2rINk0Hf2e2WmjR0Lgadk=\");\n_c2 = ShoppingItemWithMarketplace;\nfunction ShoppingItem({\n  item,\n  onToggle,\n  onRemove\n}) {\n  _s3();\n  const [itemInFocus, setItemInFocus] = useState(false);\n  return <li className=\"px-4 py-3 flex items-center hover:bg-gray-50 bg-gray-50\" onMouseEnter={() => setItemInFocus(true)} onMouseLeave={() => setItemInFocus(false)}>\n            <button type=\"button\" onClick={onToggle} className=\"w-5 h-5 rounded-full border mr-3 flex items-center justify-center bg-teal-500 border-teal-500 text-white\" aria-label=\"D\u00E9cocher\">\n                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" d=\"M5 13l4 4L19 7\" />\n                </svg>\n            </button>\n\n            <div className=\"flex-grow\">\n                <span className=\"font-medium line-through text-gray-500\">\n                    {item.ingredient.name}\n                </span>\n                {(item.quantity || item.unit) && <span className=\"ml-2 text-sm text-gray-400\">\n                        {item.quantity && <span>{item.quantity}</span>}\n                        {item.unit && <span> {item.unit}</span>}\n                    </span>}\n            </div>\n\n            {(itemInFocus || true) && <button type=\"button\" onClick={onRemove} className=\"text-gray-400 hover:text-red-500 ml-2\" aria-label=\"Supprimer\">\n                    <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                </button>}\n        </li>;\n}\n_s3(ShoppingItem, \"Uj+BHE2rINk0Hf2e2WmjR0Lgadk=\");\n_c3 = ShoppingItem;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ShoppingList\");\n$RefreshReg$(_c2, \"ShoppingItemWithMarketplace\");\n$RefreshReg$(_c3, \"ShoppingItem\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
